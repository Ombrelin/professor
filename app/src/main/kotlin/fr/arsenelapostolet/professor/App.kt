/*
 * This source file was generated by the Gradle 'init' task
 */
package fr.arsenelapostolet.professor

import app.cash.sqldelight.db.SqlDriver
import app.cash.sqldelight.driver.jdbc.sqlite.JdbcSqliteDriver
import fr.arsenelapostolet.professor.core.application.GradesApplication
import fr.arsenelapostolet.professor.repositories.SqlDelightStudentRepository
import fr.arsenelapostolet.professor.viewmodels.StudentsViewModel
import fr.arsenelapostolet.professor.views.FilePicker
import fr.arsenelapostolet.professor.views.StudentsView
import org.gnome.adw.*
import org.gnome.adw.Application
import org.gnome.adw.ApplicationWindow
import org.gnome.adw.HeaderBar
import org.gnome.gio.ApplicationFlags
import org.gnome.gtk.*


class AppKt(args: Array<String>?) {
    private val app: Application

    init {
        app = Application("my.example.HelloApp", ApplicationFlags.DEFAULT_FLAGS)
        app.onActivate { this.activate() }
        app.run(args)
    }

    fun activate() {
        val window: ApplicationWindow = ApplicationWindow(app)
        window.title = ("Professor")
        window.setDefaultSize(1280, 720)

        val box = ToolbarView()
        val headerBar = HeaderBar()
        val viewStack = ViewStack()
        val switcher = ViewSwitcher()
        switcher.stack = viewStack
        switcher.policy = ViewSwitcherPolicy.WIDE

        box.addTopBar(headerBar)
        box.content = viewStack

        headerBar.titleWidget = switcher


        //val toolbar = AdwToolbarView()
        val gridGrades = Grid()
        gridGrades.columnSpacing = 1
        gridGrades.rowSpacing = 1
        gridGrades.attach(Label("grades"), 0, 0, 4, 1)
        val driver: SqlDriver = JdbcSqliteDriver("jdbc:sqlite:test.db")
        try {
            Database.Schema.create(driver)
        } catch (ignored: Exception) {
            ignored.printStackTrace()
        }

        viewStack.addTitledWithIcon(
            StudentsView(window, StudentsViewModel(GradesApplication(SqlDelightStudentRepository(driver)), FilePicker(window))),
            "students",
            "Ã‰tudiants",
            "avatar-default-symbolic"
        )
        viewStack.addTitledWithIcon(gridGrades, "grades", "Notes", "object-select-symbolic")

        window.content = box
        window.present()

    }

    companion object {
        @JvmStatic
        fun main(args: Array<String>) {
            try {
                AppKt(args)
            } catch (e: Exception) {
                e.printStackTrace()
            }
        }
    }
}